---
export interface Props {
  title: string;
  description: string[];
  images: string[];
  video?: {
    platform: "vimeo" | "youtube" | "facebook";
    id: string;
    title?: string;
    aspectRatio?: string;
  };
}

const { title, description, images, video } = Astro.props;

function getVideoEmbedUrl(platform: string, id: string): string {
  switch (platform) {
    case "vimeo":
      return `https://player.vimeo.com/video/${id}?h=${id}`;
    case "youtube":
      return `https://www.youtube.com/embed/${id}`;
    case "facebook":
      return `https://www.facebook.com/plugins/video.php?href=${encodeURIComponent(id)}`;
    default:
      return "";
  }
}

function getAspectRatioValue(aspectRatio?: string): string {
  if (!aspectRatio) return "16/9";
  if (/^\d+\/\d+$/.test(aspectRatio)) return aspectRatio;
  return "16/9";
}
---

<div class="max-w-6xl mx-auto px-6 py-12">
  <div class="flex items-center mb-6 relative">
    <button
      type="button"
      onclick="window.history.back()"
      class="cursor-pointer hover:opacity-70 text-black font-bold transition-colors"
      aria-label="Go back"
    >
      ‚Üê Back
    </button>
    <h1
      class="flex-1 text-lg font-extrabold text-black uppercase tracking-wide text-center"
    >
      {title}
    </h1>
  </div>

  {
    video && (
      <div class="mb-12 flex justify-center">
        <div
          class="overflow-hidden w-full"
          style={{
            aspectRatio: getAspectRatioValue(video.aspectRatio),
            maxWidth:
              video.aspectRatio === "9/16"
                ? "420px"
                : video.aspectRatio === "4/4"
                  ? "600px"
                  : "900px",
            width: "100%",
          }}
        >
          <iframe
            title={video.title || `${title} video`}
            src={getVideoEmbedUrl(video.platform, video.id)}
            width="100%"
            height="100%"
            referrerpolicy="strict-origin-when-cross-origin"
            allow="autoplay; fullscreen; picture-in-picture; clipboard-write; encrypted-media; web-share"
            allowfullscreen
            class="w-full h-full"
          />
        </div>
      </div>
    )
  }

  {
    description.length > 0 ? (
      <div class="grid grid-cols-1 lg:grid-cols-2 gap-12 items-start">
        <div class="space-y-4">
          {description.map((paragraph) => (
            <p class="text-black text-base font-bold leading-relaxed">
              {paragraph}
            </p>
          ))}
        </div>
        <div class="grid grid-cols-2 gap-4">
          {images.map((imageSrc, index) => (
            <div class="aspect-square overflow-hidden relative">
              <img
                src={imageSrc}
                alt={`${title} - Image ${index + 1}`}
                class="w-full h-full object-cover"
              />
            </div>
          ))}
        </div>
      </div>
    ) : (
      <div class="grid grid-cols-4 gap-4">
        {images.map((imageSrc, index) => (
          <div class="aspect-square overflow-hidden relative">
            <img
              src={imageSrc}
              alt={`${title} - Image ${index + 1}`}
              class="w-full h-full object-cover"
            />
          </div>
        ))}
      </div>
    )
  }
</div>
